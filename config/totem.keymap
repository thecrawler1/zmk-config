//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define BASE        0
#define LMD         1
#define RMD         2
#define SYM         3
#define NUM         4
#define ARW         5
#define Media       6
#define Fun         7
#define Button      8
#define Game        9
#define Gameplus    10

/ {
    combos { compatible = "zmk,combos"; };

    behaviors {
        lhr: lhr {
            compatible = "zmk,behavior-hold-tap";
            label = "LHR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <5 6 7 8 9 15 26 27 28 29 19 30 31 16 17 18>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <100>;
        };

        rhr: rhr {
            compatible = "zmk,behavior-hold-tap";
            label = "RHR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <14 10 20 21 22 23 24 25 4 2 3 1 0 13 12 11>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <100>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            label = "BASE";
            bindings = <
       &kp Q  &kp W  &kp E            &kp R                &kp T           &kp Y      &kp U                 &kp I             &kp O    &kp P
       &kp A  &kp S  &lhr LEFT_ALT D  &lhr LEFT_CONTROL F  &kp G           &kp H      &rhr RIGHT_CONTROL J  &rhr RIGHT_ALT K  &kp L    &none
&none  &kp Z  &kp X  &kp C            &kp V                &kp B           &kp N      &kp M                 &kp COMMA         &kp DOT  &none  &none
                     &lt 4 DELETE     &mt LMETA SPACE      &lt 1 ESCAPE    &lt 2 TAB  &mt LEFT_SHIFT ENTER  &lt 3 BACKSPACE
            >;
        };

        SYM {
            label = "SYM";
            bindings = <
        &kp EXCL   &kp AT     &kp HASH   &kp DOLLAR     &kp PERCENT      &kp CARET         &kp AMPERSAND   &kp STAR      &kp UNDERSCORE  &trans
        &kp PIPE   &kp LBKT   &kp LBRC   &kp LPAR       &kp BACKSLASH    &kp SLASH         &kp RPAR        &kp RBRC      &kp RBKT        &trans
&trans  &kp GRAVE  &kp TILDE  &kp COLON  &kp SEMICOLON  &kp DQT          &kp SQT           &kp MINUS       &kp PLUS      &kp EQUAL       &trans  &trans
                              &trans     &trans         &trans           &kp LEFT_CONTROL  &kp LEFT_SHIFT  &kp LEFT_ALT
            >;
        };

        NUM {
            label = "NUM";
            bindings = <
        &kp F1   &kp F2   &kp F3        &kp F4     &kp F5       &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
        &kp N1   &kp N2   &kp N3        &kp N4     &kp N5       &kp N6  &kp N7  &kp N8  &kp N9  &trans
&trans  &kp F11  &kp F12  &trans        &kp N0     &trans       &trans  &trans  &trans  &trans  &trans   &trans
                          &kp LEFT_ALT  &kp LSHFT  &kp LCTRL    &trans  &trans  &trans
            >;
        };

        NAV {
            label = "NAV";
            bindings = <
        &trans  &trans  &trans        &trans          &trans              &trans    &kp PAGE_DOWN  &kp PAGE_UP  &kp INS    &trans
        &trans  &trans  &trans        &trans          &trans              &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &trans
&trans  &trans  &trans  &trans        &trans          &trans              &trans    &kp END        &kp HOME     &kp PSCRN  &trans  &trans
                        &kp LEFT_ALT  &kp LEFT_SHIFT  &kp LEFT_CONTROL    &trans    &trans         &trans
            >;
        };

        layer_4 {
            bindings = <
        &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
