//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define BASE        0
#define LMD         1
#define RMD         2
#define SYM         3
#define NUM         4
#define ARW         5
#define Media       6
#define Fun         7
#define Button      8
#define Game        9
#define Gameplus    10

&sk { quick-release; };

&sl { release-after-ms = <5000>; };

/ {
    combos {
        compatible = "zmk,combos";

        combo_left_ctrl {
            bindings = <&kp LEFT_CONTROL>;
            key-positions = <12 13>;
            layers = <0 1 2 3 4 5>;
        };

        combo_right_ctrl {
            bindings = <&kp RIGHT_CONTROL>;
            key-positions = <16 17>;
            layers = <0 1 2 3 4 5>;
        };

        combo_left_alt {
            bindings = <&kp LEFT_ALT>;
            key-positions = <11 12>;
            layers = <0 1 2 3 4 5>;
        };

        combo_right_alt {
            bindings = <&kp RIGHT_ALT>;
            key-positions = <17 18>;
            layers = <0 1 2 3 4 5>;
        };

        combo_left_ctrl_alt {
            bindings = <&kp LC(LEFT_ALT)>;
            key-positions = <11 12 13>;
            layers = <0 1 2 3 4 5>;
        };

        combo_right_ctrl_alt {
            bindings = <&kp RC(RIGHT_ALT)>;
            key-positions = <16 17 18>;
            layers = <0 1 2 3 4 5>;
        };

        combo_esc {
            bindings = <&kp ESC>;
            key-positions = <27 28>;
            layers = <0 1 2 3 4 5>;
        };

        combo_tab {
            bindings = <&kp TAB>;
            key-positions = <6 7>;
            layers = <0 1 2 3 4 5>;
        };

        combo_shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <7 8>;
            layers = <0 1 2 3 4 5>;
        };
    };

    macros {
        a_acute: a_acute {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp K_CONTEXT_MENU &kp SINGLE_QUOTE &kp A>;
            label = "A_ACUTE";
        };

        e_acute: e_acute {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp K_CONTEXT_MENU &kp SINGLE_QUOTE &kp E>;
            label = "E_ACUTE";
        };

        i_acute: i_acute {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp K_CONTEXT_MENU &kp SINGLE_QUOTE &kp I>;
            label = "I_ACUTE";
        };

        o_acute: o_acute {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp K_CONTEXT_MENU &kp SINGLE_QUOTE &kp O>;
            label = "O_ACUTE";
        };

        u_acute: u_acute {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp K_CONTEXT_MENU &kp SINGLE_QUOTE &kp U>;
            label = "U_ACUTE";
        };

        shift_a_acute: shift_a_acute {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp K_CONTEXT_MENU &kp SINGLE_QUOTE &kp LS(A)>;
            label = "SHIFT_A_ACUTE";
        };

        shift_e_acute: shift_e_acute {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp K_CONTEXT_MENU &kp SINGLE_QUOTE &kp LS(E)>;
            label = "SHIFT_E_ACUTE";
        };

        shift_i_acute: shift_i_acute {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp K_CONTEXT_MENU &kp SINGLE_QUOTE &kp LS(I)>;
            label = "SHIFT_I_ACUTE";
        };

        shift_o_acute: shift_o_acute {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp K_CONTEXT_MENU &kp SINGLE_QUOTE &kp LS(O)>;
            label = "SHIFT_O_ACUTE";
        };

        shift_u_acute: shift_u_acute {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp K_CONTEXT_MENU &kp SINGLE_QUOTE &kp LS(U)>;
            label = "SHIFT_U_ACUTE";
        };

        a_circumflex: a_circumflex {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp K_CONTEXT_MENU &kp CARET &kp A>;
            label = "A_CIRCUMFLEX";
        };

        e_circumflex: e_circumflex {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp K_CONTEXT_MENU &kp CARET &kp E>;
            label = "E_CIRCUMFLEX";
        };

        o_circumflex: o_circumflex {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp K_CONTEXT_MENU &kp CARET &kp O>;
            label = "O_CIRCUMFLEX";
        };

        shift_a_circumflex: shift_a_circumflex {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp K_CONTEXT_MENU &kp CARET &kp LS(A)>;
            label = "SHIFT_A_CIRCUMFLEX";
        };

        shift_e_circumflex: shift_e_circumflex {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp K_CONTEXT_MENU &kp CARET &kp LS(E)>;
            label = "SHIFT_E_CIRCUMFLEX";
        };

        shift_o_circumflex: shift_o_circumflex {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp K_CONTEXT_MENU &kp CARET &kp LS(O)>;
            label = "SHIFT_O_CIRCUMFLEX";
        };

        a_tilde: a_tilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp K_CONTEXT_MENU &kp TILDE &kp A>;
            label = "A_TILDE";
        };

        shift_a_tilde: shift_a_tilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp K_CONTEXT_MENU &kp TILDE &kp LS(A)>;
            label = "SHIFT_A_TILDE";
        };

        a_grave: a_crasis {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp K_CONTEXT_MENU &kp GRAVE &kp A>;
            label = "A_CRASIS";
        };

        shift_a_grave: shift_a_grave {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp K_CONTEXT_MENU &kp GRAVE &kp LS(A)>;
            label = "SHIFT_A_GRAVE";
        };

        c_cedilla: c_cedilla {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp K_CONTEXT_MENU &kp COMMA &kp C>;
            label = "C_CEDILLA";
        };

        shift_c_cedilla: shift_c_cedilla {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp K_CONTEXT_MENU &kp COMMA &kp LS(C)>;
            label = "SHIFT_C_CEDILLA";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        LAYER_0 {
            label = "LAYER_0";
            bindings = <
              &kp Q  &kp W  &kp E  &kp R      &kp T            &kp Y           &kp U      &kp I      &kp O    &kp P
              &kp A  &kp S  &kp D  &kp F      &kp G            &kp H           &kp J      &kp K      &kp L    &kp SEMI
&kp CAPSLOCK  &kp Z  &kp X  &kp C  &kp V      &kp B            &kp N           &kp M      &kp COMMA  &kp DOT  &kp SLASH  &kp BACKSPACE
                            &sl 4  &kp SPACE  &sk LEFT_META    &sk LEFT_SHIFT  &kp ENTER  &to 1
            >;
        };

        LAYER_1 {
            label = "LAYER_1";
            bindings = <
        &kp GRAVE         &kp EXCLAMATION    &kp HASH         &kp PERCENT            &none    &none      &kp STAR        &kp AMPERSAND  &kp AT      &none
        &kp SINGLE_QUOTE  &kp LEFT_BRACKET   &kp LEFT_BRACE   &kp LEFT_PARENTHESIS   &none    &kp CARET  &kp MINUS       &kp EQUAL      &kp DOLLAR  &kp DOUBLE_QUOTES
&trans  &kp TILDE         &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp RIGHT_PARENTHESIS  &none    &none      &kp UNDERSCORE  &kp PLUS       &kp PIPE    &kp BACKSLASH      &trans
                                             &to 0            &trans                 &to 2    &trans     &trans          &to 3
            >;
        };

        LAYER_2 {
            label = "LAYER_2";
            bindings = <
              &kp F1   &kp F2   &kp F3  &kp F4  &kp F5    &kp F6  &kp F7             &kp F8           &kp F9  &kp F10
              &kp N1   &kp N2   &kp N3  &kp N4  &kp N5    &kp N6  &kp N7             &kp N8           &kp N9  &kp N0
&kp CAPSLOCK  &kp F11  &kp F12  &none   &none   &none     &none   &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &none   &kp C_MUTE  &kp BACKSPACE
                                &to 0   &trans  &to 1     &trans  &trans             &to 3
            >;
        };

        LAYER_3 {
            label = "LAYER_3";
            bindings = <
        &none  &none  &none  &none   &none    &none     &kp PAGE_DOWN  &kp PAGE_UP  &kp PRINTSCREEN  &kp INSERT
        &none  &none  &none  &none   &none    &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT        &kp DELETE
&trans  &none  &none  &none  &none   &none    &none     &kp END        &kp HOME     &none            &none       &trans
                      &to 0  &trans  &to 2    &trans    &trans         &to 1
            >;
        };

        LAYER_4 {
            bindings = <
        &a_acute       &none     &e_acute       &none   &none    &none   &u_acute  &i_acute  &o_acute       &none
        &a_circumflex  &a_tilde  &e_circumflex  &none   &none    &none   &none     &none     &o_circumflex  &none
&trans  &a_grave       &none     &c_cedilla     &none   &none    &none   &none     &none     &none          &none  &trans
                                 &to 0          &trans  &none    &trans  &trans    &sl 5
            >;

            label = "LAYER_4";
        };

        LAYER_5 {
            bindings = <
        &shift_a_acute       &none           &shift_e_acute       &none   &none    &none   &shift_u_acute  &shift_i_acute  &shift_o_acute       &none
        &shift_a_circumflex  &shift_a_tilde  &shift_e_circumflex  &none   &none    &none   &none           &none           &shift_o_circumflex  &none
&trans  &shift_a_grave       &none           &shift_c_cedilla     &none   &none    &none   &none           &none           &none                &none  &trans
                                             &to 0                &trans  &none    &trans  &trans          &none
            >;

            label = "LAYER_5";
        };
    };
};
